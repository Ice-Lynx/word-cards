{"version":3,"sources":["fm-component.jsx","icons/pinguino.svg","App.js","reportWebVitals.js","index.js"],"names":["Card","props","x","useMotionValue","y","scale","useTransform","div","style","width","height","position","cursor","whileTap","drag","dragConstraints","top","right","bottom","left","onDragEnd","event","info","offset","setExitX","setExitY","setIndex","index","setCardContent","console","log","getDragCorner","value","initial","animate","transition","exit","exitX","exitY","opacity","duration","borderRadius","className","background","radius","cardContent","FmComponent","React","useState","contentList","content","setContent","type","stiffness","damping","e","len","length","Math","floor","random","onCountChange","getBoxGridWidth","boxGridWidth","getBoxGridHeight","boxGridHeight","App","useEffect","disableScroll","on","count","setCount","useDimensions","onResize","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be9d3dc2.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Frame } from \"framer\";\nimport {\n  motion,\n  useMotionValue,\n  useTransform,\n  AnimatePresence,\n} from \"framer-motion\";\n\nfunction Card(props) {\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n  const scale = useTransform(x, [-150, 0.9, 150], [0.1, 1, 0.1]);\n\n  function handleDragEnd(event, info) {\n    //top left corner\n    if (info.offset.x < -20 && info.offset.y < -20) {\n      // props.setExitX(-props.getBoxGridWidth / 2);\n      // props.setExitY(-props.getBoxGridHeight / 2);\n      props.setExitX(-150);\n      props.setExitY(-150);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to top left\");\n      props.getDragCorner((value) => \"TOP LEFT\");\n    }\n    //top right corner\n    if (info.offset.x > 20 && info.offset.y < -20) {\n      // props.setExitX(props.getBoxGridWidth / 2);\n      // props.setExitY(-props.getBoxGridHeight / 2);\n      props.setExitX(150);\n      props.setExitY(-150);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to top right\");\n      props.getDragCorner((value) => \"TOP RIGHT\");\n    }\n    //bottom left corner\n    if (info.offset.x < -20 && info.offset.y > 20) {\n      // props.setExitX(-props.getBoxGridWidth / 2);\n      // props.setExitY(props.getBoxGridHeight / 2);\n      props.setExitX(-150);\n      props.setExitY(150);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to bottom left\");\n      props.getDragCorner((value) => \"BOTTOM LEFT\");\n    }\n    //bottom right corner\n    if (info.offset.x > 20 && info.offset.y > 20) {\n      // props.setExitX(props.getBoxGridWidth / 2);\n      // props.setExitY(props.getBoxGridHeight / 2);\n      props.setExitX(150);\n      props.setExitY(150);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to bottom right\");\n      props.getDragCorner((value) => \"BOTTOM RIGHT\");\n    }\n  }\n\n  return (\n    <motion.div\n      style={{\n        width: 100,\n        height: 100,\n        position: \"absolute\",\n        x: x,\n        y: y,\n        cursor: \"grab\",\n      }}\n      whileTap={{ cursor: \"grabbing\" }}\n      drag={props.drag}\n      dragConstraints={{\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n      }}\n      onDragEnd={handleDragEnd}\n      initial={props.initial}\n      animate={props.animate}\n      transition={props.transition}\n      exit={{\n        x: props.exitX,\n        y: props.exitY,\n        opacity: 0,\n        scale: 0.5,\n        transition: { duration: 0.5 },\n      }}\n    >\n      <motion.div\n        style={{\n          width: 100,\n          height: 100,\n          borderRadius: 30,\n          scale: scale,\n        }}\n      >\n        <Frame\n          className=\"card\"\n          height=\"100%\"\n          width=\"100%\"\n          background=\"#59d0ff\"\n          radius=\"10%\"\n        >\n          {props.cardContent}\n        </Frame>\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport function FmComponent(props) {\n  const [index, setIndex] = React.useState(0);\n  const [exitX, setExitX] = React.useState(\"100%\");\n  const [exitY, setExitY] = React.useState(\"100%\");\n\n  const contentList = [\n    \"Dream\",\n    \"Smile\",\n    \"Change\",\n    \"Power\",\n    \"Joy\",\n    \"Love\",\n    \"Happy\",\n    \"Lollypop\",\n    \"Candy\",\n    \"Juice\",\n    \"Unichorn\",\n    \"Pony\",\n    \"Summer\",\n    \"Sun\",\n    \"Ocean\",\n  ];\n\n  const [content, setContent] = useState(\"Drag me\");\n\n  const randomContent = (e) => {\n    const len = contentList.length;\n    //setContent(props.onCountChange((e) => e + \"fuuk\"));\n    setContent(contentList[Math.floor(Math.random() * len)]);\n  };\n\n  return (\n    <motion.div\n      style={{\n        width: 100,\n        height: 100,\n        position: \"relative\",\n      }}\n    >\n      <AnimatePresence initial={false}>\n        <Card\n          key={index}\n          animate={{\n            scale: 1,\n            y: 0,\n            opacity: 1,\n          }}\n          transition={{\n            type: \"spring\",\n            stiffness: 300,\n            damping: 40,\n            opacity: {\n              duration: 0.3,\n            },\n          }}\n          exitX={exitX}\n          exitY={exitY}\n          setExitX={setExitX}\n          setExitY={setExitY}\n          index={index}\n          setIndex={setIndex}\n          cardContent={content}\n          setCardContent={randomContent}\n          getDragCorner={props.onCountChange}\n          getBoxGridWidth={props.boxGridWidth}\n          getBoxGridHeight={props.boxGridHeight}\n          drag\n        />\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pinguino.33eec588.svg\";","import \"./App.css\";\nimport { FmComponent } from \"./fm-component\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useDimensions from \"react-cool-dimensions\";\nimport disableScroll from \"disable-scroll\";\nimport penguin from \"./icons/pinguino.svg\";\n\nfunction App() {\n  useEffect(() => {\n    disableScroll.on();\n  }, []);\n  const [count, setCount] = useState(\"\");\n  const { ref, width, height } = useDimensions({\n    onResize: ({ width, height }) => {\n      // Triggered whenever the size of the target is changed\n    },\n  });\n  return (\n    <div className=\"full-page-layout\">\n      <div className=\"header\">\n        Card dragged to {count}. Box-grid dimensions: {width} x {height}\n      </div>\n\n      <div className=\"grid-layout\" ref={ref}>\n        <div className=\"item1\">1</div>\n        <div className=\"item1\">2</div>\n        <div className=\"item1\">3</div>\n        <div className=\"item2\">4</div>\n        <div className=\"item2\">\n          <FmComponent\n            onCountChange={setCount}\n            boxGridWidth={width}\n            boxGridHeight={height}\n          />\n        </div>\n        <div className=\"item2\">6</div>\n        <div className=\"item1\">7</div>\n        <div className=\"item1\">8</div>\n        <div className=\"item1\">9</div>\n      </div>\n      <div className=\"footer\">By Icelynx</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}