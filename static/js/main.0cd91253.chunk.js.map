{"version":3,"sources":["fm-component.jsx","ice-lynx-logo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","x","useMotionValue","y","scale","useTransform","div","style","width","height","position","cursor","whileTap","drag","dragConstraints","top","right","bottom","left","onDragEnd","event","info","offset","setExitX","getBoxGridWidth","setExitY","getBoxGridHeight","setIndex","index","setCardContent","console","log","getDragCorner","value","initial","animate","transition","exit","exitX","exitY","opacity","duration","borderRadius","className","background","radius","cardContent","FmComponent","React","useState","contentList","content","setContent","type","stiffness","damping","e","len","length","Math","floor","random","onCountChange","boxGridWidth","boxGridHeight","IceLynxLogo","checkVariants","checked","pathLength","stroke","ease","unchecked","isChecked","setIsChecked","class","padding","backgroundColor","onHoverStart","onHoverEnd","d","fill","path","strokeWidth","strokeLinecap","variants","App","count","setCount","useDimensions","onResize","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cd91253.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Frame } from \"framer\";\nimport {\n  motion,\n  useMotionValue,\n  useTransform,\n  AnimatePresence,\n} from \"framer-motion\";\n\nfunction Card(props) {\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n  const scale = useTransform(x, [-150, 0.9, 150], [0.1, 1, 0.1]);\n\n  function handleDragEnd(event, info) {\n    //top left corner\n    if (info.offset.x < -20 && info.offset.y < -20) {\n      props.setExitX(-props.getBoxGridWidth / 2);\n      props.setExitY(-props.getBoxGridHeight / 2);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to top left\");\n      props.getDragCorner((value) => \"TOP LEFT\");\n    }\n    //top right corner\n    if (info.offset.x > 20 && info.offset.y < -20) {\n      props.setExitX(props.getBoxGridWidth / 2);\n      props.setExitY(-props.getBoxGridHeight / 2);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to top right\");\n      props.getDragCorner((value) => \"TOP RIGHT\");\n    }\n    //bottom left corner\n    if (info.offset.x < -20 && info.offset.y > 20) {\n      props.setExitX(-props.getBoxGridWidth / 2);\n      props.setExitY(props.getBoxGridHeight / 2);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to bottom left\");\n      props.getDragCorner((value) => \"BOTTOM LEFT\");\n    }\n    //bottom right corner\n    if (info.offset.x > 20 && info.offset.y > 20) {\n      props.setExitX(props.getBoxGridWidth / 2);\n      props.setExitY(props.getBoxGridHeight / 2);\n      props.setIndex(props.index + 1);\n      props.setCardContent();\n      console.log(\"dragged to bottom right\");\n      props.getDragCorner((value) => \"BOTTOM RIGHT\");\n    }\n  }\n\n  return (\n    <motion.div\n      style={{\n        width: 100,\n        height: 100,\n        position: \"absolute\",\n        x: x,\n        y: y,\n        cursor: \"grab\",\n      }}\n      whileTap={{ cursor: \"grabbing\" }}\n      drag={props.drag}\n      dragConstraints={{\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n      }}\n      onDragEnd={handleDragEnd}\n      initial={props.initial}\n      animate={props.animate}\n      transition={props.transition}\n      exit={{\n        x: props.exitX,\n        y: props.exitY,\n        opacity: 0,\n        scale: 0.5,\n        transition: { duration: 0.5 },\n      }}\n    >\n      <motion.div\n        style={{\n          width: 100,\n          height: 100,\n          borderRadius: 30,\n          scale: scale,\n        }}\n      >\n        <Frame\n          className=\"card\"\n          height=\"100%\"\n          width=\"100%\"\n          background=\"rgba(50,50,50,1)\"\n          radius=\"10%\"\n        >\n          {props.cardContent}\n        </Frame>\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport function FmComponent(props) {\n  const [index, setIndex] = React.useState(0);\n  const [exitX, setExitX] = React.useState(\"100%\");\n  const [exitY, setExitY] = React.useState(\"100%\");\n\n  const contentList = [\n    \"Dream\",\n    \"Smile\",\n    \"Change\",\n    \"Power\",\n    \"Joy\",\n    \"Love\",\n    \"Happy\",\n    \"Lollypop\",\n    \"Candy\",\n    \"Juice\",\n    \"Unichorn\",\n    \"Pony\",\n    \"Summer\",\n    \"Sun\",\n    \"Ocean\",\n  ];\n\n  const [content, setContent] = useState(\"Drag me\");\n\n  const randomContent = (e) => {\n    const len = contentList.length;\n    //setContent(props.onCountChange((e) => e + \"fuuk\"));\n    setContent(contentList[Math.floor(Math.random() * len)]);\n  };\n\n  return (\n    <motion.div\n      style={{\n        width: 100,\n        height: 100,\n        position: \"relative\",\n      }}\n    >\n      <AnimatePresence initial={false}>\n        <Card\n          key={index}\n          animate={{\n            scale: 1,\n            y: 0,\n            opacity: 1,\n          }}\n          transition={{\n            type: \"spring\",\n            stiffness: 300,\n            damping: 40,\n            opacity: {\n              duration: 0.3,\n            },\n          }}\n          exitX={exitX}\n          exitY={exitY}\n          setExitX={setExitX}\n          setExitY={setExitY}\n          index={index}\n          setIndex={setIndex}\n          cardContent={content}\n          setCardContent={randomContent}\n          getDragCorner={props.onCountChange}\n          getBoxGridWidth={props.boxGridWidth}\n          getBoxGridHeight={props.boxGridHeight}\n          drag\n        />\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n","import \"./App.css\";\nimport * as React from \"react\";\nimport { motion, useMotionValue, useTransform } from \"framer-motion\";\n\nexport function IceLynxLogo() {\n  const checkVariants = {\n    checked: {\n      pathLength: 0,\n      stroke: \"rgb(145,205,255)\",\n      transition: { duration: 3, ease: \"easeOut\" },\n    },\n    unchecked: {\n      pathLength: 1,\n      stroke: \"rgb(145,205,255)\",\n      transition: { duration: 0 },\n    },\n  };\n\n  const [isChecked, setIsChecked] = React.useState(true);\n  const pathLength = useMotionValue(0);\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n\n  return (\n    <motion.div\n      class=\"logo\"\n      style={{\n        width: 100,\n        height: 115,\n        borderRadius: 5,\n        padding: 0,\n        backgroundColor: \"rgba(0,100,255,0)\",\n      }}\n      onHoverStart={() => setIsChecked(!isChecked)}\n      onHoverEnd={() => setIsChecked(!isChecked)}\n    >\n      <svg width=\"90\" height=\"115\">\n        <path d=\"M 25 60 l 5 0 l 10 10 l -5 0 l -10 -5\" fill=\"#91cdff\" />\n        <path d=\"M 65 60 l -5 0 l -10 10 l 5 0 l 10 -5\" fill=\"#91cdff\" />\n        <path d=\"M 45 80 l 5 5 l -2.5 5 l -5 0 l -2.5 -5\" fill=\"#91cdff\" />\n        <path\n          d=\"M 45 40 l -15 -5 l -15 -15 l -5 -15 l -5 -5 l 5 15 l -5 15 l 10 15 l -10 15 l -5 20 l 10 -5 l 10 40 l 5 -25 l 5 -5 l 10 10 l 10 0 l 10 -10 l 5 5 l 5 25 l 10 -40 l 10 5 l -5 -20 l -10 -15 l 10 -15 l -5 -15 l 5 -15 l -5 5 l -5 15 l -15 15 l -15 5\"\n          fill=\"rgba(255,255,255,0.1)\"\n        />\n        <svg width=\"90\" height=\"115\" scale=\"1\">\n          <motion.path\n            d=\"m 5 0 l 5 5 l 5 15 l 15 15 l 15 5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"rgb(145,205,255)\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n            animate={isChecked ? \"checked\" : \"unchecked\"}\n          />\n          <motion.path\n            d=\"m 85 0 l -5 5 l -5 15 l -15 15 l -15 5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"rgb(145,205,255)\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"m 5 0 l 5 15 l -5 15 l 10 15 l -10 15 l -5 20 l 10 -5 l 10 40 l 5 -25 l 5 -5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"rgb(145,205,255)\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"m 85 0 l -5 15 l 5 15 l -10 15 l 10 15 l 5 20 l -10 -5 l -10 40 l -5 -25 l -5 -5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"rgb(145,205,255)\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"m 30 85 l 10 10 l 5 0\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"rgb(145,205,255)\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"m 60 85 l -10 10 l -5 0\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"rgb(145,205,255)\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n        </svg>\n      </svg>\n    </motion.div>\n  );\n}\n","import \"./App.css\";\nimport { FmComponent } from \"./fm-component\";\nimport { IceLynxLogo } from \"./ice-lynx-logo\";\nimport React, { useState } from \"react\";\nimport useDimensions from \"react-cool-dimensions\";\n\nfunction App() {\n  const [count, setCount] = useState(\"\");\n  const { ref, width, height} = useDimensions({\n    onResize: ({ width, height}) => {\n      // Triggered whenever the size of the target is changed\n    },\n  });\n  return (\n    <div className=\"full-page-layout\">\n      <div className=\"header\">Card dragged to {count}. Box-grid dimensions: {width} x {height}</div>\n      <div className=\"grid-layout\" ref={ref}>\n        <div className=\"item\">1</div>\n        <div className=\"item\">2</div>\n        <div className=\"item\">3</div>\n        <div className=\"item\">4</div>\n        <div className=\"item\">\n          <FmComponent onCountChange={setCount} boxGridWidth={width} boxGridHeight={height} />\n        </div>\n        <div className=\"item\">6</div>\n        <div className=\"item\">7</div>\n        <div className=\"item\">8</div>\n        <div className=\"item\">9</div>\n      </div>\n      <div className=\"footer\">\n        <IceLynxLogo />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}